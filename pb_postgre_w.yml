- hosts: win
  vars:
    ver: 16
    minorver: 2
    oldver: 15
    postgredir: /var/lib/
    my_mood: happy
    urlpatch: https://sbp.enterprisedb.com/getfile.jsp?fileid=1259105
    postgres_version: "16"
  tasks:
   
    - name: Stop PostgreSQL 15 service
      win_service:
        name: postgresql-x64-15
        state: stopped

    - name: Backup PostgreSQL data directory
      win_command: >
        powershell -command "Copy-Item -Path 'C:\Program Files\PostgreSQL\15\data' -Destination 'C:\PostgreSQL_Backup' -Recurse"

    - name: Download PostgreSQL 16 installer
      win_get_url:
        url: "{{ urlpatch }}"
        dest: C:\postgresql-16.3-windows-x64.exe
    
    # - name: Ensure PostgreSQL service is running
    #   win_service:
    #     name: postgresql-16.3
    #     start_mode: auto
    #     state: started

    - name: Install PostgreSQL 16
      win_command: >
        powershell -command "Start-Process -FilePath 'C:\postgresql-16.3-windows-x64.exe' -ArgumentList '--unattendedmodeui minimal --mode unattended --servicename "postgresql-16.3" --superaccount "postgres" --superpassword "P@ssw0rdnh2"' -Wait"
      register: install_output
    
    - name: Print install output
      debug:
        var: install_output
        
    - name: Initialize PostgreSQL 16 data directory
      win_command: 'cmd /c ""%PROGRAMFILES%\PostgreSQL\16\bin\initdb.exe" -D "C:\Program Files\PostgreSQL\16\data""'

    - name: Set PostgreSQL service variables
      set_fact:
        service_name: "postgresql{{ postgres_version }}"
        bin_path: "C:\\Program Files\\PostgreSQL\\{{ postgres_version }}\\bin\\pg_ctl.exe"
        data_dir: "C:\\Program Files\\PostgreSQL\\{{ postgres_version }}\\data"

    - name: Create the PostgreSQL service
      win_shell: |
        $serviceName = "{{ service_name }}"
        $binPath = "{{ bin_path }}"
        $dataDir = "{{ data_dir }}"

        # Build the command
        $command = "`"$binPath`" runservice -N $serviceName -D `"$dataDir`""

        # Remove existing service if it exists
        if (Get-Service -Name $serviceName -ErrorAction SilentlyContinue) {
            Stop-Service -Name $serviceName -Force
            sc.exe delete $serviceName
        }

        # Create the service
        New-Service -Name $serviceName `
                    -BinaryPathName $command `
                    -DisplayName "PostgreSQL-{{ postgres_version }}" `
                    -StartupType Automatic

    - name: Start the PostgreSQL service
      win_service:
        name: "{{ service_name }}"
        start_mode: auto
        state: started
      ignore_errors: yes

    - name: Verify PostgreSQL service status
      win_shell: |
        Get-Service -Name "{{ service_name }}"
      register: service_status

    - debug:
        var: service_status
    # - name: Run PowerShell script to create the PostgreSQL service
    #   register: svcout
    #   win_shell: |
    #     $serviceName = "postgresql16"
    #     $binPath = "C:\\Program Files\\PostgreSQL\\16\\bin\\pg_ctl.exe"
    #     $dataDir = "C:\\Program Files\\PostgreSQL\\16\\data"

    #     # Build the command
    #     $command = "`"$binPath`" runservice -N $serviceName -D `"$dataDir`""

    #     # Create the service
    #     New-Service -Name $serviceName `
    #                 -BinaryPathName $command `
    #                 -DisplayName "postgre16svc" `
    #                 -StartupType Automatic

    #     # Start the service
    #     Start-Service -Name $serviceName

    #     # Check the service status
    #     Get-Service -Name $serviceName
    
    # - name: Print svc output
    #   debug:
    #     var: svcout

    
     



    
     
    # - name: Stop PostgreSQL 16 service
    #   win_service:
    #     name: postgresql-x64-16
    #     state: stopped
      

    # - name: Upgrade PostgreSQL
    #   win_shell: |
    #     "%PROGRAMFILES%\PostgreSQL\16\bin\pg_upgrade.exe" -b "C:\Program Files\PostgreSQL\15\bin" -B "C:\Program Files\PostgreSQL\16\bin" -d "C:\Program Files\PostgreSQL\15\data" -D "C:\Program Files\PostgreSQL\16\data"
    # - name: Run pg_upgrade from PostgreSQL 15 to 16
    #   win_shell: |
    #     set PGPASSWORD=P@ssw0rdnh2
    #     "%PROGRAMFILES%\PostgreSQL\16\bin\pg_upgrade.exe" \
    #     -b "C:\Program Files\PostgreSQL\15\bin" \
    #     -B "C:\Program Files\PostgreSQL\16\bin" \
    #     -d "C:\Program Files\PostgreSQL\15\data" \
    #     -D "C:\Program Files\PostgreSQL\16\data" \
    #     -o "-c config_file=C:\Program Files\PostgreSQL\15\data\postgresql.conf" \
    #     -O "-c config_file=C:\Program Files\PostgreSQL\16\data\postgresql.conf"
    # - name: stopped PostgreSQL 15 service
    #   win_service:
    #     name: postgresql-x64-15
    #     state: started

    # - name: Migrate data from PostgreSQL 15 to 16 
    #   win_command: 'cmd /c ""%PROGRAMFILES%\PostgreSQL\16\bin\pg_upgrade.exe" -b "C:\Program Files\PostgreSQL\15\bin" -B "C:\Program Files\PostgreSQL\16\bin" -d "C:\Program Files\PostgreSQL\15\data" -D "C:\Program Files\PostgreSQL\16\data""'
     

    # - name: Start PostgreSQL 16 service
    #   win_service:
    #     name: postgresql-x64-16
    #     state: started

    # - name: Remove PostgreSQL 15
    #   win_package:
    #     name: PostgreSQL 15
    #     state: absent

    # - name: Remove PostgreSQL 16 installer
    #   win_file:
    #     path: C:\postgresql-16.3-windows-x64.exe
    #     state: absent

    # - name: Get PostgreSQL version
    #   win_command: 'cmd /c ""%PROGRAMFILES%\PostgreSQL\15\bin\psql.exe" -V"'
    #   register: psql_version

    # - name: Display PostgreSQL version
    #   debug:
    #     msg: "{{ psql_version.stdout }}"   

   
    
