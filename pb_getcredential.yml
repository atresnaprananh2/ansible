- name: get credential
  hosts: oracleRAC1
  gather_facts: true
  become: true
  remote_user: root
  become_user: root
  vars:
    destdownload: "/opt/opsware"
    ansible_python_interpreter: "/opt/opsware/agent/bin/python3"
  tasks:
    

    - name: get credential fileid
      run_once: true
      shell: "{{ ansible_python_interpreter }} -"
      args:
        stdin: |
          from pytwist import * 
          from pytwist.com.opsware.search import Filter
          from pytwist.com.opsware.pkg import *
          ts = twistserver.TwistServer()
          pkgsvc = ts.pkg.UnknownPkgService
          filter2 = Filter()
          packages = pkgsvc.findUnknownPkgRefs(filter2)
          for package in packages:
              if package.name == "cred.b64":
                print(package.id)
      register: pkgname

    - name: chk pkgname
      debug:
        var: pkgname.stdout
    
    - name: download credentials
      command: "{{ ansible_python_interpreter }}"
      args:
        stdin: >
          from coglib import downloader;

          downloader.Tsunami().fetch_unit(downloader.DownloadUnit({{ pkgname.stdout }},None,None,'cred.b64', None, '/opt/opsware'))
      register: test
      when: "'RedHat' in ansible_distribution"   
      tags: download,remote

    - name: decode username
      run_once: true
      shell: "{{ ansible_python_interpreter }} -"
      args:
        stdin: |
          import base64

          # Read from the .b64 file
          with open("/opt/opsware/cred.b64", "r") as file:
              encoded = file.read().strip()

          # Decode Base64
          decoded = base64.b64decode(encoded).decode('utf-8')

          # Split into username and password
          username, password = decoded.split(":", 1)  # The 1 ensures only the first ":" is used

          print(decoded)

      register: credentials
    
    - name: chk pkgname
      debug:
        var: credentials.stdout

    - name: Split username and password
      set_fact:
        sa_username: "{{ credentials.stdout.split(':')[0] }}"
        sa_password: "{{ credentials.stdout.split(':')[1] }}"

    - name: chk username
      debug:
        var: sa_username

    - name: chk password
      debug:
        var: sa_password


    

   
   